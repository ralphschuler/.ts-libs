name: Node.js Package Workflow

on:
  push:
    branches:
      - main
  release:
    types: [created]

env:
  NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  NODE_VERSION: 20

jobs:
  list-updated-packages:
    name: List updated packages
    runs-on: ubuntu-latest
    outputs:
      updated_packages: ${{ steps.list-updated-packages.outputs.updated_packages }}
    steps:
      - name: List updated packages
        id: list-updated-packages
        uses: ./.github/workflows/list-updated-packages
        with:
          fetch-depth: 2

  format-and-lint:
    if: ${{ needs.list-updated-packages.outputs.updated_packages != '' && toJson(needs.list-updated-packages.outputs.updated_packages) != '[]' }}
    name: Format and lint
    needs: [list-updated-packages]
    strategy:
      matrix:
        package: ${{ fromJson(needs.list-updated-packages.outputs.updated_packages) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
      - run: corepack enable
      - run: yarn workspace @lib-lib/${{ matrix.package }} install
      - run: yarn workspace @lib-lib/${{ matrix.package }} format
    #      - run: yarn workspace @lib-lib/${{ matrix.package }} lint
    outputs:
      package: ${{ matrix.package }}

  build-and-test:
    name: Build and test
    needs: format-and-lint
    runs-on: ubuntu-latest
    env:
      package: ${{fromJson(needs.format-and-lint.outputs.package)}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
      - run: corepack enable
      - run: yarn workspace @lib-lib/${{ env.package }} install
      - run: yarn workspace @lib-lib/${{ env.package }} build
      - run: yarn workspace @lib-lib/${{ env.package }} test
    outputs:
      package: ${{ env.package }}

  publish:
    if: ${{ github.event_name == 'release' && startsWith(github.event.action, 'created') }}
    name: Publish
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      package: ${{fromJson(needs.build-and-test.outputs.package)}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: https://npm.pkg.github.com/
      - run: corepack enable
      - run: yarn workspace @lib-lib/${{ env.package }} install
      - run: yarn workspace @lib-lib/${{ env.package }} publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
